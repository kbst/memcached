---
name: "Memcached"
tagline: "High-performance, distributed in-memory caching"
release_stage: alpha

# Descriptive text.
description: |-
  The Memcached operator provides a managed service like experience
  for Memcache in-memory caches on any Kubernetes cluster.
  Memcached is an in-memory key-value store for small chunks of arbitrary data
  (strings, objects) from results of database calls, API calls, or page
  rendering.

# List of highlights, must be multiple of 3, best to use 3 or 6
highlights:
  - icon: "power_settings_new"
    title: "Push-button deploy"
    text: |
        Deploy self-driving Memcache in-memory cache clusters with just one
        kubectl command on any Kubernetes cluster.
  - icon: "open_with"
    title: "Self-driving &amp; scalable"
    text: |
        Automated provisioning, operations and scaleability.
        Full cluster life-cycle compatibility including node maintenance and
        upgrades. Self-healing recovery from pod or node failures.
  - icon: "timeline"
    title: "Seamless monitoring"
    text: |
        Built-in Prometheus metrics exporter for monitoring Memcached.
        Fully automatic integration with the
        [Prometheus operator](/catalog/prometheus) or
        easily integrated into your existing monitoring.

readme:
  predeploy: []
  postdeploy:
      -
        text: |
            You can now setup your memcached driver to use the service:
            `{{ schema.variables[0].value }}.{{ schema.variables[1].value }}.svc.cluster.local`
        type: text
      -
        text: |
            This headless service will return one IP per replica.
            Make sure your memcached driver is configured to do consistent
            hashing and refreshes the list of backends from DNS. The IPs
            will change when you scale replicas or pods are replaced.
        type: callout

maintainer_name: "Kubestack"
maintainer_url: "https://github.com/kbst/memcached"
